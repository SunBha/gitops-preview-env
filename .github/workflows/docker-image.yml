name: Build and Push Docker Image

on:
  pull_request:
    types: [opened, labeled, reopened, synchronize]
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # echo "PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
      - name: Set Environment Variables
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "PR_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "this is PR - $PR_NUMBER"

      - name: Add Preview Label
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['preview']
            })

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: bhatiasunny/my-preview-app:${{ env.SHORT_SHA }}

      - name: Update Kustomization File in PR Branch
        run: |
          # Clone the manifests repository
          git clone https://x-access-token:${{ secrets.MANIFESTS_REPO_TOKEN }}@github.com/SunBha/gitops-preview-env.git preview-env-manifests
          cd preview-env-manifests
          
          # Create and checkout a new branch for the PR
          git checkout -b preview-pr-${{ env.PR_NUMBER }} || git checkout preview-pr-${{ env.PR_NUMBER }}
          
          # Update the kustomization file
          cd kustomize-preview-app
          if [ -f "kustomization.yaml" ]; then
            echo "✅ Found kustomization.yaml, updating..."
            sed -i "s|newTag:.*|newTag: ${SHORT_SHA}|" kustomization.yaml
          else
            echo "❌ ERROR: kustomization.yaml not found!"
            exit 1
          fi

          # Commit and push changes
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add kustomization.yaml
          git commit -m "Update image tag to ${SHORT_SHA} for PR-${PR_NUMBER}"
          git push -f origin preview-pr-${{ env.PR_NUMBER }}
